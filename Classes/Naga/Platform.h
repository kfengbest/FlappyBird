/*
    Copyright 2012 NAGA.  All Rights Reserved.

    The source code contained or described herein and all documents related
    to the source code ("Material") are owned by NAGA or its suppliers or 
	licensors.  Title to the Material remains with NAGA or its suppliers and 
	licensors.  The Material is protected by worldwide copyright laws and 
	treaty provisions.  No part of the Material may be used, copied, reproduced, 
	modified, published, uploaded, posted, transmitted, distributed, or 
	disclosed in any way without NAGA's prior express written permission.

    No license under any patent, copyright, trade secret or other
    intellectual property right is granted to or conferred upon you by
    disclosure or delivery of the Materials, either expressly, by
    implication, inducement, estoppel or otherwise.  Any license under such
    intellectual property rights must be express and approved by NAGA in
    writing.
*/
/*
	Author		:	Yu Li
	Description	:	Naga Library Common Definitions
	History		:	2012, Initial implementation.
*/
#ifndef __Naga_Platform_h__
#define __Naga_Platform_h__

/// Naga Graphics Engin basic definitions
/// version information
#define _CODENAME		NAGA
#define _VER_MAJOR_		0
#define _VER_MINOR_		1

/// if the namespace is supported by the compiler
#define NAMESPACE_SUPPORTED 1

// define the name space of the engine platform
#if NAMESPACE_SUPPORTED

#define NAMESPACE_NAGA_BEGIN namespace Naga {
#define NAMESPACE_NAGA_END	}
#define USING_NAGA			using namespace Naga
#define NAGA    Naga::

#else

/// iOS doesn't support namespace 
#define NAMESPACE_NAGA_BEGIN 
#define NAMESPACE_NAGA_END	
#define USING_PLATFORM			
#define NAGA    

#endif

// is the INLINE supported
#define INLINE inline
// support multi-thread
#define MULTITHREAD 0

#if defined( _MSC_VER )
// Turn off warnings, because Microsoft Visual C++ doesn't support ANSI C/C++ very well
// so ignoring these warnings doesn't result in collapse
// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#pragma warning (disable : 4786)
// disable: "conversion from 'double' to 'float', possible loss of data
#pragma warning (disable : 4244)
// disable: "truncation from 'double' to 'float'
#pragma warning (disable : 4305)
// disable: "<type> needs to have dll-interface to be used by clients'
// Happens on STL member variables which are not public therefore is ok
#pragma warning (disable : 4251)
// disable: "non dll-interface class used as base for dll-interface class"
// Happens when deriving from Singleton because bug in compiler ignores
// template export
#pragma warning (disable : 4275)
// disable: "C++ Exception Specification ignored"
// This is because MSVC 6 did not implement all the C++ exception 
// specifications in the ANSI C++ draft.
#pragma warning( disable : 4290 )
// disable: "no suitable definition provided for explicit template 
// instantiation request" Occurs in VC7 for no justifiable reason on all 
// #includes of Singleton
#pragma warning( disable: 4661)
// disable: " no matching operator delete found; memory will not be freed 
// if initialization throws an exception
#pragma warning( disable: 4291)
// disable: warning C4201: nonstandard extension used : nameless struct/union
#pragma warning( disable: 4201)
// disable: warning C4996: This function or variable may be unsafe
#pragma warning( disable: 4996)
#endif

#ifdef _DEBUG
#define DEBUG_MODE 1
#else
#define DEBUG_MODE 0
#endif

#ifdef _UNICODE
#define WIDEN2(x) L ## x
#define WIDEN(x) WIDEN2(x)
#define __WFILE__ WIDEN(__FILE__)
#else
#define WIDEN2(x)  
#define WIDEN(x) 
#define __WFILE__ __FILE__
#endif

#define _DTM 
#define _NLH "\n"

#define PLATFORM_WIN32  1
#define PLATFORM_IOS	2
#define PLATFORM_ANROID 3 

#if defined _WIN32
#define PLATFORM PLATFORM_WIN32
	/// windows platform specified 
	#if _MSC_VER >= 1400  
	#   define OVERRIDE override
	#   define SEALED   sealed  
	#   define ABSTRACT abstract
	#else
	#   define OVERRIDE 
	#   define SEALED
	#   define ABSTRACT
	#endif

#define STD std::
#define TR1 std::tr1::

#elif defined __APPLE__

#define PLATFORM PLATFORM_IOS
#define OVERRIDE 
#define SEALED
#define ABSTRACT

#define STD std::
#define TR1 std::

#endif 

// definition of the export
#if defined _WIN32

#ifdef _NAGA_LIB_
#define NAGAAPI __declspec(dllexport)
#else
//#define NAGAAPI __declspec(dllimport)
#define NAGAAPI 
#endif

#define NAGAALIGN4     __declspec( align(  4 ) )
#define NAGAALIGN8     __declspec( align(  8 ) )
#define NAGAALIGN16    __declspec( align( 16 ) )
#define NAGAALIGN32    __declspec( align( 32 ) )
#define NAGAALIGN64    __declspec( align( 64 ) )

#elif defined __APPLE__
#define NAGAAPI 

#endif 

#endif // __Naga_Platform_h__
